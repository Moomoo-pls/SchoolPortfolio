Looking over how he did the MPI code, I probably would have gone for something a lot more primitive. Like in the master function how Thomas instantiates ntasks, unless I looked into exactly how that function operated, I probably would have set it at a hard coded 552 knowing full well there are that many scenarios. The whole master and slave thing is reminiscent of threads, so my approach of sending work out and keeping track of finished tasks would've been similar to the provided code. Every other difference can be boiled down to our different approaches to the Adventure Game code, such as Thomas using an array for the locations of you, ogre, and treasure. Whereas I made a struct for that and pointed to the locations. Overall, I would say Thomas' approach is more efficient, where in my approach I had to account for things in extraneous ways (specifically the confInt variable of my Location struct who's sole purpose is comparison.).
